<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

	<!-- 密码凭匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- 指定算法 -->
		<property name="hashAlgorithmName" value="md5" />
		<!-- 散列次数 -->
		<property name="hashIterations" value="1" />
	</bean>
	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroRealm.java -->
	<bean id="shiroRealm" class="com.khwy.shiro.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
	</bean>

	<!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,该属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录成功后要跳转的连接(如果controller中定义了跳转连接，以controller中的为主) -->
		<property name="successUrl" value="/index" />
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login" />
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<property name="unauthorizedUrl" value="/error" />

		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- anon:表示可匿名使用,可以理解为匿名用户或游客 -->
		<!-- authc:表示必须已通过认证 -->
		<!-- 注意顺序 -->
		<property name="filterChainDefinitions">
			<value>
				/login=anon
				/user/login=anon
				/error=anon
				/index/**=authc,roles["role1"]
			</value>
		</property>
	</bean>

	<!-- shiro生命周期处理器 -->
	<!-- 用于在实现了 Initializable 接口的 Shiro bean 初始化时调用Initializable 接口回调 -->
	<!-- 在实现了 Destroyable 接口的 Shiro bean 销毁时调用 Destroyable 接口回调。 -->
	<!-- 如 UserRealm 就实现了 Initializable -->
	<!-- DefaultSecurityManager 实现了Destroyable -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions) -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans> 
